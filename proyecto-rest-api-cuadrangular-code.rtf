{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 # new-project-CRUD\
package.json\{\}\
\{\
  "name": "server",\
  "version": "1.0.0",\
  "description": "",\
  "main": "index.js",\
  "scripts": \{\
    "build": "tsc -w",\
    "dev":"nodemon build/index.js"\
  \},\
  "keywords": [],\
  "author": "",\
  "license": "ISC",\
  "dependencies": \{\
    "cors": "^2.8.5",\
    "express": "^4.17.1",\
    "morgan": "^1.10.0",\
    "promise-mysql": "^5.0.3"\
  \},\
  "devDependencies": \{\
    "nodemon": "^2.0.7"\
  \}\
\}\
#tsconfig.json\
\
\{\
  "compilerOptions": \{\
    /* Visit https://aka.ms/tsconfig.json to read more about this file */\
\
    /* Basic Options */\
    // "incremental": true,                         /* Enable incremental compilation */\
    "target": "es6",                                /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', 'ES2021', or 'ESNEXT'. */\
    "module": "commonjs",                           /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */\
    // "lib": [],                                   /* Specify library files to be included in the compilation. */\
    // "allowJs": true,                             /* Allow javascript files to be compiled. */\
    // "checkJs": true,                             /* Report errors in .js files. */\
    // "jsx": "preserve",                           /* Specify JSX code generation: 'preserve', 'react-native', 'react', 'react-jsx' or 'react-jsxdev'. */\
    // "declaration": true,                         /* Generates corresponding '.d.ts' file. */\
    // "declarationMap": true,                      /* Generates a sourcemap for each corresponding '.d.ts' file. */\
    // "sourceMap": true,                           /* Generates corresponding '.map' file. */\
    // "outFile": "./",                             /* Concatenate and emit output to single file. */\
   "outDir": "./build",                              /* Redirect output structure to the directory. */\
    // "rootDir": "./",                             /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */\
    // "composite": true,                           /* Enable project compilation */\
    // "tsBuildInfoFile": "./",                     /* Specify file to store incremental compilation information */\
    // "removeComments": true,                      /* Do not emit comments to output. */\
    // "noEmit": true,                              /* Do not emit outputs. */\
    // "importHelpers": true,                       /* Import emit helpers from 'tslib'. */\
    // "downlevelIteration": true,                  /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */\
    // "isolatedModules": true,                     /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */\
\
    /* Strict Type-Checking Options */\
    "strict": true,                                 /* Enable all strict type-checking options. */\
    // "noImplicitAny": true,                       /* Raise error on expressions and declarations with an implied 'any' type. */\
    // "strictNullChecks": true,                    /* Enable strict null checks. */\
    // "strictFunctionTypes": true,                 /* Enable strict checking of function types. */\
    // "strictBindCallApply": true,                 /* Enable strict 'bind', 'call', and 'apply' methods on functions. */\
    // "strictPropertyInitialization": true,        /* Enable strict checking of property initialization in classes. */\
    // "noImplicitThis": true,                      /* Raise error on 'this' expressions with an implied 'any' type. */\
    // "alwaysStrict": true,                        /* Parse in strict mode and emit "use strict" for each source file. */\
\
    /* Additional Checks */\
    // "noUnusedLocals": true,                      /* Report errors on unused locals. */\
    // "noUnusedParameters": true,                  /* Report errors on unused parameters. */\
    // "noImplicitReturns": true,                   /* Report error when not all code paths in function return a value. */\
    // "noFallthroughCasesInSwitch": true,          /* Report errors for fallthrough cases in switch statement. */\
    // "noUncheckedIndexedAccess": true,            /* Include 'undefined' in index signature results */\
    // "noImplicitOverride": true,                  /* Ensure overriding members in derived classes are marked with an 'override' modifier. */\
    // "noPropertyAccessFromIndexSignature": true,  /* Require undeclared properties from index signatures to use element accesses. */\
\
    /* Module Resolution Options */\
    // "moduleResolution": "node",                  /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */\
    // "baseUrl": "./",                             /* Base directory to resolve non-absolute module names. */\
    // "paths": \{\},                                 /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */\
    // "rootDirs": [],                              /* List of root folders whose combined content represents the structure of the project at runtime. */\
    // "typeRoots": [],                             /* List of folders to include type definitions from. */\
    // "types": [],                                 /* Type declaration files to be included in compilation. */\
    // "allowSyntheticDefaultImports": true,        /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */\
    "esModuleInterop": true,                        /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */\
    // "preserveSymlinks": true,                    /* Do not resolve the real path of symlinks. */\
    // "allowUmdGlobalAccess": true,                /* Allow accessing UMD globals from modules. */\
\
    /* Source Map Options */\
    // "sourceRoot": "",                            /* Specify the location where debugger should locate TypeScript files instead of source locations. */\
    // "mapRoot": "",                               /* Specify the location where debugger should locate map files instead of generated locations. */\
    // "inlineSourceMap": true,                     /* Emit a single file with source maps instead of having a separate file. */\
    // "inlineSources": true,                       /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */\
\
    /* Experimental Options */\
    // "experimentalDecorators": true,              /* Enables experimental support for ES7 decorators. */\
    // "emitDecoratorMetadata": true,               /* Enables experimental support for emitting type metadata for decorators. */\
\
    /* Advanced Options */\
    "skipLibCheck": true,                           /* Skip type checking of declaration files. */\
    "forceConsistentCasingInFileNames": true        /* Disallow inconsistently-cased references to the same file. */\
  \}\
\}\
#index.ts\
import express, \{ Application \} from 'express';\
\
class Server \{\
\
   public app: Application;\
\
        constructor() \{\
            this.app = express():\
            this.config();\
            this.routes();\
        \}\
\
        config(): void\{\
            this.app.set('port', process.env.PORT || 3000);\
        \}\
\
        routes():void\{\
\
        \}\
        start(): void\{\
            this.app.listen(this.app.get('port')), () => \{\
               console.log('server on port', this.app.get('port'));\
            \}\
        \}\
\}\
\
const server = new Server();\
server.start();\
\
#criterios de clasificacion\
static public class Partido\
   \{\
       public int local = -1, visitante = -1;\
   \}\
   \
   private static Partido[][] calcularLigaNumEquiposPar(int numEquipos)\
   \{\
       int numRondas = numEquipos - 1;\
       int numPartidosPorRonda = numEquipos / 2;\
       \
       Partido[][] rondas = new Partido[numRondas][numPartidosPorRonda];\
       \
       for (int i = 0, k = 0; i < numRondas; i ++)\
       \{\
           for (int j = 0; j < numPartidosPorRonda; j ++)\
           \{\
               rondas[i][j] = new Partido();\
               \
               rondas[i][j].local = k;\
               \
               k ++;\
               \
               if (k == numRondas)\
                   k = 0;\
           \}\
       \}\
       \
       int equipoMasAlto = numEquipos - 1;\
       \
       for (int i = 0, k = equipoMasAlto; i < numRondas; i ++)\
       \{\
           for (int j = 0; j < numPartidosPorRonda; j ++)\
           \{\
               rondas[i][j].visitante = k;\
               k --;\
               if (k == -1)\
                   k = equipoMasAlto;\
           \}\
       \}\
       \
       return rondas;\
   \}\
   \
   static public Partido[][] calcularLiga(int numEquipos)\
   \{\
       if (numEquipos % 2 == 0)\
           return calcularLigaNumEquiposPar(numEquipos);\
       else\
           return calcularLigaNumEquiposImpar(numEquipos);\
   \}\
   \
   static public void mostrarPartidos(Partido[][] rondas)\
   \{\
       System.out.println("IDA");\
       \
       for (int i = 0; i < rondas.length; i ++)\
       \{\
           System.out.print("Ronda " + (i + 1) + ": ");\
           \
           for (int j = 0; j < rondas[i].length; j ++)\
           \{\
               System.out.print("   " + (1 + rondas[i][j].local) + "-" + (1 + rondas[i][j].visitante));\
           \}\
           \
           System.out.println();\
       \}\
       \
       System.out.println("VUELTA");\
       \
       for (int i = 0; i < rondas.length; i ++)\
       \{\
           System.out.print("Ronda " + (i + 1) + ": ");\
           \
           for (int j = 0; j < rondas[i].length; j ++)\
           \{\
               System.out.print("   " + (1 + rondas[i][j].visitante) + "-" + (1 + rondas[i][j].local));\
           \}\
           \
           System.out.println();\
       \}\
   \}\
   static public void main(String[] args)\
   \{\
       System.out.println("Liga con 3 equipos:");\
       \
       mostrarPartidos(calcularLiga(3));\
       \
       System.out.println();\
       \
       System.out.println("Liga con 4 equipos:");\
       \
       mostrarPartidos(calcularLiga(4));\
   \}\
\} Liga con 8\
\
equipos:\
IDA Ronda 1: 1-8 2-7 3-6 4-5 Ronda 2: 8-5 6-4 7-3 1-2 Ronda 3: 2-8 3-1 4-7 5-6 Ronda 4: 8-6 7-5 1-4 2-3 Ronda 5: 3-8 4-2 5-1 6-7 Ronda 6: 8-7 1-6 2-5 3-4 Ronda 7: 4-8 5-3 6-2 7-1 VUELTA Ronda 1: 8-1 7-2 6-3 5-4 Ronda 2: 5-8 4-6 3-7 2-1 Ronda 3: 8-2 1-3 7-4 6-5 Ronda 4: 6-8 5-7 4-1 3-2 Ronda 5: 8-3 2-4 1-5 7-6 Ronda 6: 7-8 6-1 5-2 4-3 Ronda 7: 8-4 3-5 2-6 1-7\
\
Liga con 7 equipos: IDA Ronda 1: 2-7 3-6 4-5 Ronda 2: 6-4 7-3 1-2 Ronda 3: 3-1 4-7 5-6 Ronda 4: 7-5 1-4 2-3 Ronda 5: 4-2 5-1 6-7 Ronda 6: 1-6 2-5 3-4 Ronda 7: 5-3 6-2 7-1 VUELTA Ronda 1: 7-2 6-3 5-4 Ronda 2: 4-6 3-7 2-1 Ronda 3: 1-3 7-4 6-5 Ronda 4: 5-7 4-1 3-2 Ronda 5: 2-4 1-5 7-6 Ronda 6: 6-1 5-2 4-3 Ronda 7: 3-5 2-6 1-7\
\
PHP\
$players = array('A','B','C','D');\
$matchs = array();\
\
foreach($players as $k)\{\
	foreach($players as $j)\{\
		if($k == $j)\{\
			continue;\
		\}\
		$z = array($k,$j);\
		sort($z);\
		if(!in_array($z,$matchs))\{\
			$matchs[] = $z;\
		\}\
	\}\
\}\
\
print_r($matchs);\
Array(\
    [0] => Array( [0] => A , [1] => B  ),\
    [1] => Array( [0] => A , [1] => C  ),\
    [2] => Array( [0] => A , [1] => D  ),\
    [3] => Array( [0] => B , [1] => C  ),\
    [4] => Array( [0] => B , [1] => D  ),\
    [5] => Array( [0] => C , [1] => D  ),\
)\
\
#python\
tope = 4\
\
# modificar el numero de clubes\
clubes = []10\
index_clubes = 0\
for i in range(0,tope):\
   clubes.append("Club_"+str(i+1))\
\
auxT = len(clubes)\
impar= True if auxT%2 != 0 else False\
\
if impar:\
   auxT += 1\
\
totalP = auxT/2 # total de partidos de una jornada\
jornada = []\
indiceInverso = auxT-2\
\
for i in range(1,auxT):\
   equipos = []\
   list_equipos = \{\}\
   for indiceP in range(0,totalP):\
      if index_clubes > auxT-2:\
         index_clubes = 0\
\
      if indiceInverso < 0:\
         indiceInverso = auxT-2\
\
      if indiceP == 0: # seria el partido inicial de cada fecha\
         if impar:\
            equipos.append(clubes[index_clubes])\
         else:\
            if (i+1)%2 == 0:\
               partido = [clubes[index_clubes], clubes[auxT-1]]\
            else:\
               partido = [clubes[auxT-1], clubes[index_clubes]]\
            equipos.append(" vs ".join(partido))\
      else:\
         partido = [clubes[index_clubes], clubes[indiceInverso]]\
         equipos.append(" vs ".join(partido))\
         indiceInverso -= 1\
      index_clubes += 1\
\
   list_equipos = \{\
      'jornada': "Jornada Nro.: " + str(i),\
      'equipos': equipos\
   \}\
   jornada.append(list_equipos)\
\
print(jornada)\
\
\
\
\
\
\
\
"use strict";\
var __importDefault = (this && this.__importDefault) || function (mod) \{\
    return (mod && mod.__esModule) ? mod : \{ "default": mod \};\
\};\
Object.defineProperty(exports, "__esModule", \{ value: true \});\
const express_1 = __importDefault(require("express"));}